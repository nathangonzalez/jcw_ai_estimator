name: Bootstrap scaffold (no-CI)
permissions:
  contents: write

on:
  workflow_dispatch:

jobs:
  scaffold:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Create scaffold files (no CI file)
        run: |
          set -euo pipefail
          ROOT="$(pwd)"
          echo "Creating scaffold in $ROOT"

          mkdir -p services/api/app services/plan-ai/app services/bim/app services/gis/app services/web/pages infra/traefik scripts templates

          cat > README.md <<'EOF'
# Coastal BIM AI (scaffold inside jcw_ai_estimator)

Monorepo: AI plan reading → BIM/QTO → estimating, with Florida coastal risk overlays.

Quick start:
1) Install Docker & Docker Compose.
2) Copy `.env.example` to `.env` and adjust secrets.
3) `docker compose -f infra/docker-compose.yml up --build`
4) Web UI: http://localhost:3000  | API: http://localhost:8000/docs
EOF

          cat > .env.example <<'EOF'
POSTGRES_USER=postgres
POSTGRES_PASSWORD=postgres
POSTGRES_DB=coastal
MINIO_ROOT_USER=minio
MINIO_ROOT_PASSWORD=minio123
S3_ENDPOINT=http://obj:9000
S3_BUCKET=plans
S3_REGION=us-east-1
JWT_SECRET=change_me
EOF

          cat > .gitignore <<'EOF'
# Python
__pycache__/
*.pyc
.venv/
.env

# Node
node_modules/
.next/
dist/

# Data
backend/data/*
!backend/data/.gitkeep
models/*
!backend/models/.gitkeep

# OS
.DS_Store
EOF

          mkdir -p services/api/app
          cat > services/api/app/main.py <<'PY'
from fastapi import FastAPI
from fastapi.middleware.cors import CORSMiddleware

app = FastAPI(title="Coastal BIM AI API")

app.add_middleware(
    CORSMiddleware,
    allow_origins=["*"], allow_credentials=True,
    allow_methods=["*"], allow_headers=["*"],
)

@app.get("/health")
def health(): return {"ok": True}

@app.post("/ingest")
def ingest_stub(): return {"msg": "upload to S3; enqueue plan-ai job"}

@app.get("/qto/{project_id}")
def qto_stub(project_id: str): return {"project_id": project_id, "lines": []}

@app.get("/site/florida")
def fl_site_stub():
    return {"nfhl": "use WMS/FeatureServer", "cccl": "DEP GIS", "slr": "NOAA SLR"}
PY

          mkdir -p services/plan-ai/app
          cat > services/plan-ai/app/worker.py <<'PY'
# Minimal placeholder for Plan-AI
from fastapi import FastAPI
app = FastAPI(title="Plan-AI Service")
@app.get("/health")
def health(): return {"ok": True}
PY

          mkdir -p services/bim/app
          cat > services/bim/app/main.py <<'PY'
from fastapi import FastAPI
app = FastAPI(title="BIM/QTO Service")
@app.get("/health")
def health(): return {"ok": True}
PY

          mkdir -p services/gis/app
          cat > services/gis/app/main.py <<'PY'
from fastapi import FastAPI
app = FastAPI(title="GIS Service (FL Coastal)")
@app.get("/health")
def health(): return {"ok": True}
PY

          mkdir -p services/web/pages
          cat > services/web/pages/index.js <<'JS'
export default function Home() {
  return (
    <main style={{padding:20}}>
      <h1>Coastal BIM AI</h1>
      <p>Welcome. API at <code>http://localhost:8000/docs</code></p>
    </main>
  );
}
JS

          mkdir -p infra/traefik
          cat > infra/docker-compose.yml <<'DC'
version: "3.9"
services:
  db:
    image: postgis/postgis:16-3.4
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
      POSTGRES_DB: ${POSTGRES_DB:-coastal}
    ports: ["5432:5432"]

  obj:
    image: minio/minio:RELEASE.2024-07-26T20-05-44Z
    command: server /data --console-address ":9001"
    environment:
      MINIO_ROOT_USER: ${MINIO_ROOT_USER:-minio}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD:-minio123}
    ports: ["9000:9000","9001:9001"]
    volumes: ["minio_data:/data"]

  api:
    build: ../services/api
    ports: ["8000:8000"]
    depends_on: [db, obj]

  web:
    build: ../services/web
    ports: ["3000:3000"]
    depends_on: [api]

volumes:
  minio_data:
DC

          cat > scripts/minio_make_bucket.sh <<'SH'
#!/usr/bin/env bash
set -euo pipefail
MC_IMAGE=minio/mc
S3_URL=${S3_ENDPOINT:-http://localhost:9000}
USER=${MINIO_ROOT_USER:-minio}
PASS=${MINIO_ROOT_PASSWORD:-minio123}
BUCKET=${S3_BUCKET:-plans}
docker run --rm --network host ${MC_IMAGE} alias set local ${S3_URL} ${USER} ${PASS} || true
docker run --rm --network host ${MC_IMAGE} mb -p local/${BUCKET} || true
echo "Bucket '${BUCKET}' ensured at ${S3_URL}"
SH
          chmod +x scripts/minio_make_bucket.sh

          git config user.name "github-actions[bot]" >/dev/null 2>&1 || true
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com" >/dev/null 2>&1 || true
          git add -A
          if git commit -m "scaffold: add coastal-bim-ai scaffold (no CI file)"; then
            git push
            echo "Scaffold committed and pushed."
          else
            echo "No changes to commit."
          fi
